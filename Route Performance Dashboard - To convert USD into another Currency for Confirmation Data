Select 
FCP.*,CC.avg_exchangerate,OC.orig_country,DC.dest_country
FROM
(select 
count(distinct farenetconfirmationid) as conversions,
totalprice as Revenue,
totalpriceusd as RevenueUSD,
airlineiatacode, 
departureairportiatacode as orig,
arrivalairportiatacode as dest,
currencycode,
languageisocode as Language,
devicecategory AS Device,
flighttype,
(farenetconfirmationtimestamp::DATE AT TIME ZONE 'UTC') AT TIME ZONE 'EST' AS date,
siteedition as siteEdition
from public.normalized_farenet_confirmation_001
where upper(airlineiatacode)='XX' --Change the airlineIataCode here. 
group by trackingid,totalprice,totalpriceusd, airlineiatacode,"orig","dest",
currencycode,languageisocode,devicecategory,flighttype,siteedition,farenetconfirmationtimestamp
) FCP

left join 
(select (cast(farenetconfirmationtimestamp as timestamp) :: DATE AT TIME ZONE 'UTC') AT TIME ZONE 'EST' AS "Book Date_Currency",
currencycode as currency,
avg(exchangerate) as avg_exchangerate 
from public.normalized_farenet_confirmation_001
where 
upper(airlineiatacode)='XX' --Change the airlineIataCode here. 
and upper(currencycode)='XXX' --Change the currency code here. 
group by "Book Date_Currency",currency) CC on FCP."date"=CC."Book Date_Currency"

left join (select distinct iata_code as orig_iata_code, country_code as orig_country from datacore.custom.core_dictionary) OC on upper(FCP."orig")=upper(OC."orig_iata_code")

left join (select distinct iata_code as dest_iata_code, country_code as dest_country from datacore.custom.core_dictionary) DC on upper(FCP."dest")=upper(DC."dest_iata_code")
